    <!-- Page Wrapper -->
    <div id="wrapper">

            <% include ./partials/sidebar %>
        
            <!-- Content Wrapper -->
            <div id="content-wrapper" class="d-flex flex-column">
              <!-- Main Content -->
              <div id="content">
        
                <% include ./partials/topbar %>
        
                <!-- Begin Page Content -->
                <div class="container-fluid">
        
                  <!-- Page Heading -->
                  <div class="d-sm-flex align-items-center justify-content-between mb-4">
                    <h1 class="h3 mb-0 text-gray-800"> Making the Game </h1>
                  </div>

                  <div class='row'>
                      <div class="col-xl-12 col-lg-11">
                        <p> Please visit https://github.com/LeQuint/Chess to see the code as the explanations will refer to the code base</p>
                      </div>
                  </div>
      
                  <div class="row">
                    <div class="col-xl-12 col-lg-11">
                      <div class="card shadow mb-4">
                        <!-- Card Header - Dropdown -->
                        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                          <h6 class="m-0 font-weight-bold text-primary"> Summary </h6>
                        </div>
                        <!-- Card Body -->
                        <div class="card-body">
                          <p> The game is coded completely from scratch using JavaScript and the p5.js library. Designing the architechture of the game was the most
                            algorithmically challenging part of the whole project. The gist of design is breaking down the components of the game into classes and then
                            adding supporting functions to facilitate their interactions. For example, the board object is main component and it holds sub-components such as
                            the pieces object which each have their own behavior according to the rules of chess.
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
    
                  <div class="row">
                    <!-- Area Chart -->
                    <div class="col-xl-12 col-lg-11">
                      <div class="card shadow mb-4">
                        <!-- Card Header - Dropdown -->
                        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                          <h6 class="m-0 font-weight-bold text-primary"> Synchronization and Peer-to-peer Connection </h6>
                        </div>
                        <!-- Card Body -->
                        <div class="card-body">
                          <p> The connection between users is established via WebRTC which allows for a real-time serverless connection between users. Since the library
                            only came with the barebone functions of sending and receiving data, I had to establish a communication protocol between clients. Each data packet
                            sent comes with a message type attribute which allows the receiver to run different functions to process the incoming information. You can see this
                            code by going to /RTC/synchronization.js in the code base. 
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
        
                  
                  </div>
                <!-- /.container-fluid -->
        
              </div>
              <!-- End of Main Content -->
        
              <!-- Footer -->
              <footer class="sticky-footer bg-white">
                <div class="container my-auto">
                  <div class="copyright text-center my-auto">
                    <span>Copyright &copy; Zhi Guo 2019</span>
                  </div>
                </div>
              </footer>
              <!-- End of Footer -->
        
            </div>
            <!-- End of Content Wrapper -->
        
          </div>
          <!-- End of Page Wrapper -->
        
          <!-- Scroll to Top Button-->
          <a class="scroll-to-top rounded" href="#page-top">
            <i class="fas fa-angle-up"></i>
          </a>
        
          <!-- Logout Modal-->
          <% include ./partials/logoutModal %>
        
      